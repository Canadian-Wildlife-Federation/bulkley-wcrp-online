```{python echo=FALSE}
#| echo: false
import warnings
import pandas as pd
import numpy as np
import python.api_calls as api
import matplotlib as mpl

warnings.filterwarnings('ignore')
```

# Connectivity Status Assessment and Goals {-}

## Key Ecological Attributes and Current Connectivity Status {-}

The planning team devised two Key Ecological Attributes (KEAs) and associated indicators to assess the current connectivity status of the watershed – Accessible Spawning Habitat and Accessible Rearing Habitat (@tbl-connectivity). KEAs are the key aspects of anadromous salmonid ecology that are being targeted by this WCRP. The connectivity status for the Anadromous Salmonid KEAs were used to establish goals to improve habitat connectivity in the watershed and will be the baseline against which progress is tracked over time. 

The current connectivity status assessment relies on GIS analyses to map known and modelled barriers to fish passage, identify stream reaches that have potential spawning and rearing habitat, estimate the proportion of habitat that is currently accessible to target species, and prioritize barriers for field assessment that would provide the greatest gains in connectivity. To support a flexible prioritization framework to identify priority barriers in the watershed, two assumptions are made: 1) any modelled (i.e., passability status is unknown) or partial barriers are treated as complete barriers to passage and 2) the habitat modelling is binary, it does not assign any habitat quality values. As such, the current connectivity status will be refined over time as more data on habitat and barriers are collected. For more detail on how the connectivity status assessments were conducted, see Appendix B.


```{python echo=FALSE}
#| label: tbl-connectivity
#| tbl-cap: "Connectivity status assessment for spawning (a) and rearing (b) habitat in the Bulkley River watershed. The two KEAs - Accessible Spawning Habitat and Accessible Rearing Habitat - are evaluated by dividing the length of linear habitat (of each type) that is currently accessible to target species by the total length of all linear habitat (of each type) in the watershed."
#| warning: false
#| echo: false

import pandas as pd
import numpy as np
import matplotlib as mpl
import warnings

warnings.filterwarnings('ignore')

df = pd.DataFrame({"Target Species":["Andromous Salmon"," "],
                   "KEA":["Available Spawning Habitat"," "],
                   "Indicator":["% of total spawning habitat","Current Status:"],
                   "Poor":["<50%"," "],
                   "Fair":["51-75%"," "],
                   "Good":["76-90%", api.watershed_connectivity("SPAWNING")[0]],
                   "Very Good":[">90%"," "]  # watershed_connectivity("ALL")]
                   })


def highlighttab7(val):
    red = '#ff0000;'
    yellow = '#ffff00;'
    lgreen = '#92d050;'
    dgreen = '#03853e;'

    if val=="<50%" : color = red
    elif val[0:].isdigit() and int(val) < 50 : color = red
    elif val=="51-75%": color = yellow
    elif val=="76-90%"  : color = lgreen
    elif val[0:].isdigit() and (int(val) >= 76 and int(val) < 90) : color = lgreen 
    elif val ==">90%": color = dgreen
    elif val[0:].isdigit() and int(val) >= 90 : color = dgreen 
    elif val == "Current Status:" : return "font-weight: bold"
    else: color = 'white'
    return 'background-color: %s' % color

df.style.applymap(highlighttab7).set_table_styles(
   [{
       'selector': 'th',
       'props': [('background-color', '#008270'),('text-align', 'left')]
   }]).hide()
```

**Comments:** Indicator rating definitions are based on the consensus decisions of the planning team. The current status is based on the CWF Barrier Prioritization Model output, which is current as of October 2022.

```{python echo=FALSE}
#| warning: false
#| echo: false

#creating table 7
import pandas as pd
import numpy as np
import matplotlib as mpl


warnings.filterwarnings('ignore')

df = pd.DataFrame({"Target Species":["Andromous Salmon",""],
                   "KEA":["Available Rearing Habitat",""],
                   "Indicator":["% of total rearing habitat","Current Status:"],
                   "Poor":["<50%"," "],
                   "Fair":["51-75%", api.watershed_connectivity("REARING")[0]],
                   "Good":["76–90%"," "],
                   "Very Good":[">90%"," "]
                   })

def highlighttab7b(val):
    red = '#ff0000;'
    yellow = '#ffff00;'
    lgreen = '#92d050;'
    dgreen = '#03853e;'

    if val=="<50%" : color = red
    elif val[0:].isdigit() and int(val) < 50 : color = red
    elif val=="51-75%": color = yellow
    elif val[0:].isdigit() and (int(val) >= 51 and int(val) < 75) : color = yellow 
    elif val=="76–90%"  : color = lgreen
    elif val[0:].isdigit() and (int(val) >= 76 and int(val) < 90) : color = lgreen 
    elif val ==">90%": color = dgreen
    elif val[0:].isdigit() and int(val) >= 90 : color = dgreen 
    elif val == "Current Status:" : return "font-weight: bold"
    else: color = 'white'
    return 'background-color: %s' % color

df.style.applymap(highlighttab7b).set_table_styles(
   [{
       'selector': 'th',
       'props': [('background-color', '#008270'),('text-align', 'left')]
   }]).hide()


```

**Comments:** Indicator rating definitions are based on the consensus decisions of the planning team. The current status is based on the CWF Barrier Prioritization Model output, which is current as of October 2022. 


## Goals {-}

```{python echo=FALSE}
#| label: tbl-goals
#| tbl-cap: "Goals to improve spawning (1) and rearing (2) habitat connectivity for target species in the Bulkley River watershed over the lifespan of the WCRP (2021-2031). The goals were established through discussions with the planning team and represent the resulting desired state of connectivity in the watershed. The goals are subject to change as more information and data are collected over the course of the plan timeline (e.g., the current connectivity status is updated based on barrier field assessments)."
#| warning: false
#| echo: false

#creating table 7
import warnings

warnings.filterwarnings('ignore')
import pandas as pd
import numpy as np

df = pd.DataFrame({"Goal #": [1,2],
                   "Goal": ["By 2031, the percent (%) of total linear spawning habitat accessible to anadromous salmonids will increase from "+ str(api.watershed_connectivity("SPAWNING")[0]) +"% to 95% within the Bulkley River watershed (i.e., reconnect at least "+str(round(api.gain_spawn))+" km of spawning habitat).",
                            "By 2031, the percent (%) of total linear rearing habitat accessible to anadromous salmonids will increase from "+str(api.watershed_connectivity("REARING")[0])+"% to 80% within the Bulkley River watershed (i.e., reconnect at least "+str(round(api.gain_rear))+" km of rearing habitat). "]
                    })

data = df.style.hide().set_properties(**{'text-align': 'left'})

data.set_table_styles(
   [{
       'selector': 'th',
       'props': [('background-color', '#008270'),('text-align', 'left')]
   }])

```




